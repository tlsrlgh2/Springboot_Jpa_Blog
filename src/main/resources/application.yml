# 포트 , db연결 등의 설정을 yml에서 설정해줌.
# 코드수를 줄여서 데이터의 크기를 줄이기 위해선 yaml 을 사용하고
# 데이터의 크기 순서는 xml > json > yaml 순서가 된다.

server:
  port: 8088
  servlet:
#    context-path: /
    context-path: /blog
    #context-path 는 http://localhost:8088/blog/http/lombok 이런식으로 사용하도록 해줌
    # 기본값은  http://localhost:8088/http/lombok 이것이다
spring:
  mvc:
    view:
      prefix: /WEB-INF/views/
#     prefix는 앞에 붙여주는 경로명
      suffix: .jsp
#     suffix는 뒤에 붙여주는 경로명
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/blog?serverTimezone=Asia/Seoul
    username: cos
    password: cos1234
    
  jpa:
    open-in-view: true
    hibernate:
      ddl-auto: update
#     ddl-auto의 타입을 먼저 확인해야함. create는 테이블을 생성한다는 뜻.
#     ddl-auto 처음일경우만 create이고 그 후에는 update를 사용해야함. 안그러면 데이터가 다 사라지고 다시 생성됨
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#        PhysicalNamingStrategyStandardImpl이란 전략은 엔티티(테이블)을 만들때 변수명 그대로 데이터베이스에 필드를 만들어줌
#       springPhysicalNamingStrategy전략이란 myEmail을 > my_email로 변경해줌
      use-new-id-generator-mappings: false
#     시퀀스를 사용하는 방식을 뜻함. false 일경우 jpa의 기본 넘버링 전략을 따라가지 않음. ture jpa의 기본 넘버링 전략을 따라감
    show-sql: true
#    show-sql 는 콘솔창에서 sql이 생성되었는지 확인이 가능하도록 하는 설정
    properties:
      hibernate.format_sql: true
#      hibernate.format_sql sql문을 정렬해서 볼수있도록 하는 설정

  jackson:
    serialization:
      fail-on-empty-beans: false